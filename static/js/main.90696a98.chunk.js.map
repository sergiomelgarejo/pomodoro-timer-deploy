{"version":3,"sources":["components/Button.jsx","context/SettingsContext.js","components/CountdownAnimation.jsx","components/SetPomodoro.jsx","App.js","index.js"],"names":["Button","title","activeClass","_callback","className","onClick","SettingsContext","createContext","SettingsContextProvider","props","useState","pomodoro","setPomodoro","executing","setExecuting","startAnimate","setStartAnimate","updateExecute","updatedSettings","setTimerTime","evaluate","active","work","short","long","Provider","value","resetTimer","stopAnimate","startTimer","pauseTimer","SettingsBtn","setCurrentTimer","active_state","remainingTime","minutes","Math","floor","seconds","children","CountdownAnimation","key","timer","animate","useContext","isPlaying","duration","colors","strokeWidth","size","trailColor","onComplete","SetPomodoro","newTimer","setNewTimer","handleChange","input","target","name","parseInt","noValidate","onSubmit","e","preventDefault","type","onChange","App","useEffect","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90696a98.chunk.js","sourcesContent":["export function Button({title, activeClass, _callback}) {\r\n  return (\r\n    <button title={title} className={activeClass} onClick={_callback}>\r\n      {title}\r\n    </button>\r\n  )\r\n}","import { createContext, useState } from 'react'\r\n\r\nexport const SettingsContext = createContext()\r\n\r\nexport default function SettingsContextProvider(props) {\r\n  const [pomodoro, setPomodoro] = useState(0)\r\n  const [executing, setExecuting] = useState({})\r\n  const [startAnimate, setStartAnimate] = useState(false)\r\n\r\n  function startTimer() {\r\n    setStartAnimate(true)\r\n  }\r\n\r\n  function pauseTimer() {\r\n    setStartAnimate(false)\r\n  }\r\n\r\n  function resetTimer() {\r\n    setPomodoro(executing.active)\r\n    setStartAnimate(true)\r\n  }\r\n\r\n  const SettingsBtn = () => {\r\n    setExecuting({})\r\n    setPomodoro(0)\r\n  }\r\n\r\n  function setCurrentTimer(active_state) {\r\n    updateExecute({\r\n      ...executing,\r\n      active: active_state\r\n    })\r\n    setTimerTime(executing)\r\n  }\r\n\r\n  const updateExecute = (updatedSettings) => {\r\n    setExecuting(updatedSettings)\r\n    setTimerTime(updatedSettings)\r\n  }\r\n\r\n  const setTimerTime = (evaluate) => {\r\n    switch (evaluate.active) {\r\n      case 'work':\r\n        setPomodoro(evaluate.work)\r\n        break;\r\n      case 'short':\r\n        setPomodoro(evaluate.short)\r\n        break;\r\n      case 'long':\r\n        setPomodoro(evaluate.long)\r\n        break;\r\n      default:\r\n        setPomodoro(0)\r\n        break;\r\n    }\r\n  }\r\n\r\n  function stopAnimate() {\r\n    setStartAnimate(false)\r\n  }\r\n\r\n  const children = ({ remainingTime }) => {\r\n    const minutes = Math.floor(remainingTime / 60)\r\n    const seconds = remainingTime % 60\r\n\r\n    return `${minutes}:${seconds}`\r\n  }\r\n\r\n  return (\r\n    <SettingsContext.Provider value={{\r\n      resetTimer, \r\n      updateExecute,\r\n      pomodoro,\r\n      executing,\r\n      startAnimate,\r\n      stopAnimate,\r\n      startTimer,\r\n      pauseTimer,\r\n      SettingsBtn,\r\n      setCurrentTimer,\r\n      updateExecute,\r\n      children\r\n      }}>\r\n      {props.children}\r\n    </SettingsContext.Provider>\r\n  )\r\n}","import { useContext } from \"react\"\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\"\r\nimport { SettingsContext } from \"../context/SettingsContext\"\r\n\r\nexport function CountdownAnimation({\r\n  key = 1, \r\n  timer = 20, \r\n  animate = true, \r\n  children}) \r\n{\r\n\r\n  const {stopAnimate} = useContext(SettingsContext)\r\n\r\n  return (\r\n    <CountdownCircleTimer\r\n      key={key}\r\n      isPlaying={animate}\r\n      duration={ timer * 60 }\r\n      colors={[['#ff6961', 0.33]]}\r\n      strokeWidth={6}\r\n      size={220}\r\n      trailColor=\"#3a3b3c\"\r\n      onComplete={() => {\r\n        stopAnimate()\r\n      }}\r\n    >\r\n      {children}\r\n    </CountdownCircleTimer>\r\n  )\r\n}","import { useContext, useState } from \"react\";\r\nimport { SettingsContext } from '../context/SettingsContext'\r\n\r\nexport function SetPomodoro() {\r\n  const [newTimer, setNewTimer] = useState({\r\n    work: 25.0, \r\n    short: 5.0, \r\n    long: 15.0,\r\n    active: 'work'\r\n  })\r\n\r\n  const {updateExecute} = useContext(SettingsContext)\r\n\r\n  const handleChange = input => {\r\n    const {name, value} = input.target\r\n    switch (name) {\r\n      case 'work':\r\n        setNewTimer({\r\n          ...newTimer,\r\n          work: parseInt(value)\r\n        })\r\n        break;\r\n      case 'shortBreak':\r\n        setNewTimer({\r\n          ...newTimer,\r\n          short: parseInt(value)\r\n        })\r\n        break;\r\n      case 'longBreak':\r\n        setNewTimer({\r\n          ...newTimer,\r\n          long: parseInt(value)\r\n        })\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    updateExecute(newTimer)\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div className=\"input-wrapper\">\r\n          <input className=\"input\" type=\"number\" name=\"work\" onChange={handleChange} value={newTimer.work} title={`${newTimer.work} minutes`}/>\r\n          <input className=\"input\" type=\"number\" name=\"shortBreak\" onChange={handleChange} value={newTimer.short} title={`${newTimer.short} minutes`}/>\r\n          <input className=\"input\" type=\"number\" name=\"longBreak\" onChange={handleChange} value={newTimer.long} title={`${newTimer.long} minutes`}/>\r\n        </div>\r\n        <button className=\"active-label\" type=\"submit\" >Set timer</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}","import { useContext, useEffect } from \"react\";\nimport { Button } from \"./components/Button\";\nimport { CountdownAnimation } from \"./components/CountdownAnimation\";\nimport { SetPomodoro } from \"./components/SetPomodoro\";\nimport { SettingsContext } from \"./context/SettingsContext\";\n\nfunction App() {\n  const {\n    pomodoro, \n    executing, \n    setCurrentTimer, \n    SettingsBtn, \n    children,\n    startAnimate,\n    startTimer,\n    pauseTimer,\n    resetTimer,\n    updateExecute\n  } = useContext(SettingsContext)\n\n  useEffect(() => {updateExecute(executing)}, [executing, startAnimate])\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Pomodoro</h1>\n      <small className=\"sub-title\">Increase your productivity with the pomodoro technique.</small>\n        {pomodoro !== 0 ?\n          <>\n            <ul className=\"labels\">\n              <li>\n                <Button \n                  title=\"Work\" \n                  activeClass={executing.active === 'work' && 'active-label'}\n                  _callback={() => setCurrentTimer('work')} \n                />\n              </li>\n              <li>\n                <Button \n                  title=\"Short Break\" \n                  activeClass={executing.active === 'short' && 'active-label'}\n                  _callback={() => setCurrentTimer('short')} \n                />\n              </li>\n              <li>\n                <Button \n                  title=\"Long Break\" \n                  activeClass={executing.active === 'long' && 'active-label'}\n                  _callback={() => setCurrentTimer('long')} \n                />\n              </li>\n            </ul>\n            <div className=\"timer-container\">\n              <div className=\"time-wrapper\">\n                <CountdownAnimation\n                  key={pomodoro}\n                  timer={pomodoro}\n                  animate={startAnimate}\n                >\n                  {children}\n                </CountdownAnimation>\n              </div>\n            </div>\n            <div className=\"button-wrapper labels\">\n              <Button \n                title=\"Start\" \n                activeClass={!startAnimate ? 'active' : undefined}\n                _callback={startTimer}\n              />\n              <Button \n                title=\"Pause\" \n                activeClass={startAnimate ? 'active' : undefined}\n                _callback={pauseTimer}\n              />\n              <Button \n                title=\"Reset\" \n                activeClass={'reset'}\n                _callback={resetTimer}\n              />\n            </div>\n            <Button title=\"Settings\" _callback={SettingsBtn} />\n          </> : <SetPomodoro />\n        }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SettingsContextProvider from './context/SettingsContext';\n\nReactDOM.render(\n  <SettingsContextProvider>\n    <App />\n  </SettingsContextProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}